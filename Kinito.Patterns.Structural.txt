Adapter
	Match interfaces of different classes.
	Convert the interface of a class into another interface clients expect.
	Adapter lets classes work together that couldn't otherwise because of 
	incompatible interfaces.


Bridge
	Separates an object’s interface from its implementation.
	Decouple an abstraction from its implementation so that the two can vary 
	independently.


Composite
	A tree structure of simple and composite object.
	Compose objects into tree structures to represent part-whole hierarchies.
	Composite lets clients treat individual objects and compositions of 
	objects uniformly.


Decorator
	Add responsibilities to objects dynamically.
	Attach additional responsibilities to an object dynamically.
	Decorators provide a flexible alternative to subclassing for extending functionality.


Facade
	A single class that represents an entire subsystem.
	Provide a unified interface to a set of interfaces in a subsystem.
	Façade defines a higher-level interface that makes the subsystem easier to use.


Flyweight
	A fine-grained instance used for efficient sharing.
	Use sharing to support large numbers of fine-grained objects efficiently.


Proxy
	An object representing another object.
	Provide a surrogate or placeholder for another object to control access to it.